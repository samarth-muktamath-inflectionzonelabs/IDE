version: '3.8'

services:
  app:
    build: .
    ports:
      - "9000:9000"
      - "5173:5173"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./server/user-data:/app/user-data
    environment:
      - NODE_ENV=production
      - MINIO_ENDPOINT=minio
      - MINIO_PORT=9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin123
    depends_on:
      - redis
      - minio
    
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # MinIO Cloud Storage Service
  minio:
    image: minio/minio:latest
    container_name: minio_storage
    command: server /data --console-address ":9002"
    ports:
      - "9001:9000"  # MinIO API
      - "9002:9002"  # MinIO Console (Web UI)
    volumes:
      - minio_data:/data
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin123
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Auto-create bucket service
  createbucket:
    image: minio/mc:latest
    depends_on:
      - minio
    restart: on-failure
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      /usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin123;
      /usr/bin/mc mb myminio/user-files --ignore-existing;
      /usr/bin/mc policy set public myminio/user-files;
      echo 'Bucket user-files created successfully';
      exit 0;
      "

  frontend-dev:
    build:
      context: ./interface
      dockerfile: Dockerfile.dev
    ports:
      - "5173:5173"
    volumes:
      - ./interface:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    profiles:
      - dev

volumes:
  redis_data:
  minio_data:
